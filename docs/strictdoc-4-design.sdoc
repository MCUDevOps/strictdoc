[DOCUMENT]
TITLE: Design Document
OPTIONS:
  REQUIREMENT_STYLE: Table
  REQUIREMENT_IN_TOC: True

[SECTION]
TITLE: Design decisions

[SECTION]
TITLE: Building blocks

[REQUIREMENT]
TITLE: TextX
STATEMENT: TextX shall be used for StrictDoc grammar definition and parsing of the sdoc files.
COMMENT: >>>
TextX is an easy-to-install Python tool. It is fast, works out of the box.
<<<

[REQUIREMENT]
TITLE: Jinja2
STATEMENT: Jinja2 shall be used for rendering HTML templates.

[REQUIREMENT]
TITLE: Sphinx and Docutils
STATEMENT: >>>
Sphinx and Docutils shall be used for the following capabilities:

- Support of Restructured Text (reST) format
- Generation of RST documents into HTML
- Generation of RST documents into PDF using LaTeX
- Generating documentation websites using Sphinx
<<<

[/SECTION]

[/SECTION]

[SECTION]
TITLE: Graphical user interface

[FREETEXT]
- Web interface is based on FastAPI / Uvicorn serving Jinja templates.
- The Javascript is minimized to Turbo/Stimulus to avoid the complexity of JS frameworks such as React, Vue, Angular, etc.
- Uvicorn web server that serves as a StrictDoc backend for reading and writing SDoc files.

- Several trade-offs to consider:

  - Desktop vs Web. Rather web-based, i.e. Python backend and JS frontend, but which technology?

- Keep the current behavior of a statically generated website.
[/FREETEXT]

[/SECTION]
